plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.5.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'itmo'
version = '0.0.1-SNAPSHOT'
description = 'PopulationService'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
    implementation('org.apache.httpcomponents:httpclient:4.5.14') {
        exclude group: 'org.apache.httpcomponents.client5', module: 'httpclient5'
    }
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-data-rest")
	implementation("org.springframework.boot:spring-boot-starter-security")
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
    }
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("org.openapitools:jackson-databind-nullable:0.2.6")
	implementation("io.swagger:swagger-annotations:1.6.8")
	implementation("javax.annotation:javax.annotation-api:1.3.2")
	implementation("jakarta.xml.bind:jakarta.xml.bind-api:4.0.0")
	implementation("org.glassfish.jaxb:jaxb-runtime:4.0.2")
	implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml")
	implementation("org.mapstruct:mapstruct:1.5.5.Final")
	annotationProcessor("org.mapstruct:mapstruct-processor:1.5.5.Final")
	implementation("org.yaml:snakeyaml:2.2")
	compileOnly("org.projectlombok:lombok")
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	runtimeOnly("org.postgresql:postgresql")
	annotationProcessor("org.projectlombok:lombok")
	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.security:spring-security-test")
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

configurations.configureEach {
    exclude group: 'org.apache.httpcomponents.client5', module: 'httpclient5'
}

bootWar {
    enabled = true
    archiveClassifier = 'boot'
}

war {
    enabled = true
    archiveClassifier = ''
}

tasks.named('test') {
	useJUnitPlatform()
}
